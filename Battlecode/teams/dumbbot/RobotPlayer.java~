package dumbbot;

import battlecode.common.Direction;
import battlecode.common.GameConstants;
import battlecode.common.RobotController;
import battlecode.common.RobotType;
import battlecode.common.Team;

/** The example funcs player is a player meant to demonstrate basic usage of the most common commands.
 * Robots will move around randomly, occasionally mining and writing useless messages.
 * The HQ will spawn soldiers continuously. 
 */
public class RobotPlayer {
    public static void run(RobotController rc) {
        while (true) {
            try {
                if (rc.getType() == RobotType.HQ) {
                    if (rc.isActive()) {
                        // Spawn a soldier
                        Direction dir = randomDir(rc)
                        if (rc.canMove(dir))
                            rc.spawn(dir);
                    }
                } else if (rc.getType() == RobotType.SOLDIER) {
                    if (rc.isActive()) {

                        MapLocation[] nuetralMines = senseMineLocations(rc.getLocation(), 1, Team.NEUTRAL);
                        MapLocation[] enemyMines = senseMineLocations(rc.getLocation)(), 1, rc.getTeam().opponent());
                        if (Math.random() < .01 && rc.getLocation().distanceSquaredTo(rc.senseHQLocation()) < 16) {
                            // Lay a mine 
                            if(rc.senseMine(rc.getLocation())==null)
                                rc.layMine();
                        } else { 
                            // Choose a random direction, and move that way if possible
                            Direction dir = Direction.values()[(int)(Math.random()*8)];
                            if(rc.canMove(dir)) {
                                rc.move(dir);
                                rc.setIndicatorString(0, "Last direction moved: "+dir.toString());
                            }
                        }
                    }
					
                    if (Math.random()<0.01 && rc.getTeamPower()>5) {
                        // Write the number 5 to a position on the message board corresponding to the robot's ID
                        rc.broadcast(rc.getRobot().getID()%GameConstants.BROADCAST_MAX_CHANNELS, 5);
                    }
                }

                // End turn
                rc.yield();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    private static Direction randomDir(RobotController rc) {
        Direction dir = Direction.values()[(int)(Math.random()*8)];
        if(rc.canMove(dir)) return dir;
        else return randomDir(rc);
    }  
}
